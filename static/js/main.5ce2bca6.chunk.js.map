{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","services/pixabay-api.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","createPortal","onClick","src","url","alt","ImageGalleryItem","webformatURL","tags","fetchImages","page","searchParams","URLSearchParams","q","key","image_type","orientation","per_page","fetch","then","response","ok","json","Promise","reject","Error","hits","Status","loaderRoot","ImageGallery","images","status","getLargeImgURL","index","onImageClick","largeImageURL","prevProps","prevState","showButton","length","info","catch","message","theme","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","map","Button","App","searchQuery","showModal","modalURL","onSearch","onLoadMore","bool","closeModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ce2bca6.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ query: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.query.trim() === '') {\r\n      return toast.error('Enter the search query');\r\n    }\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n        <div className=\"Modal\">\n          <img src={this.props.url} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nfunction ImageGalleryItem({ webformatURL, tags, onClick }) {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick}>\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","const API_KEY = '22978515-5cb8795ed8e9eafc86c022855';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImages(query, page) {\n  const searchParams = new URLSearchParams({\n    q: query,\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12,\n    page,\n  });\n\n  const url = `${BASE_URL}?${searchParams}`;\n\n  return fetch(url)\n    .then(response =>\n      response.ok\n        ? response.json()\n        : Promise.reject(\n            new Error(`Something went wrong, please try again later`),\n          ),\n    )\n    .then(({ hits }) => hits);\n}\n\nexport default fetchImages;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Loader from 'react-loader-spinner';\nimport fetchImages from '../../services/pixabay-api';\nimport './ImageGallery.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst loaderRoot = document.querySelector('#loader-root');\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    query: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n    onImageClick: PropTypes.func.isRequired,\n    showButton: PropTypes.func.isRequired,\n  };\n\n  state = {\n    images: null,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query, page, showButton } = this.props;\n\n    if (prevProps.query !== query) {\n      this.setState({ status: Status.PENDING });\n      showButton(false);\n\n      fetchImages(query, page)\n        .then(images => {\n          if (!images.length) {\n            toast.info('No images found :(');\n            this.setState({ images, status: Status.IDLE });\n            return;\n          }\n\n          this.setState({ images, status: Status.RESOLVED }, showButton(true));\n        })\n        .catch(error => {\n          toast.error(`${error.message}`, {\n            theme: 'colored',\n          });\n\n          this.setState({ status: Status.REJECTED });\n        });\n\n      return;\n    }\n\n    if (prevProps.page !== page) {\n      this.setState({ status: Status.PENDING });\n\n      fetchImages(query, page)\n        .then(images =>\n          this.setState(prevState => {\n            return {\n              images: [...prevState.images, ...images],\n              status: Status.RESOLVED,\n            };\n          }),\n        )\n        .then(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        });\n    }\n  }\n\n  getLargeImgURL = index => {\n    this.props.onImageClick(this.state.images[index].largeImageURL);\n  };\n\n  render() {\n    const { images, status } = this.state;\n\n    return (\n      <div>\n        {status === 'pending' &&\n          createPortal(\n            <div className=\"loader\">\n              <Loader type=\"Grid\" color=\"#3f51b5\" height={100} width={100} />\n            </div>,\n            loaderRoot,\n          )}\n\n        <ul className=\"ImageGallery\">\n          {images &&\n            images.map(({ webformatURL, tags }, index) => {\n              return (\n                <div key={index}>\n                  <ImageGalleryItem\n                    webformatURL={webformatURL}\n                    tags={tags}\n                    onClick={() => this.getLargeImgURL(index)}\n                  />\n                </div>\n              );\n            })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ onClick }) {\n  return (\n    <div className=\"ButtonContainer\">\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    showButton: false,\n    showModal: false,\n    modalURL: '',\n  };\n\n  onSearch = searchQuery => {\n    this.setState({ searchQuery, page: 1 });\n  };\n\n  onLoadMore = () => {\n    this.setState(prevState => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  showButton = bool => {\n    this.setState({ showButton: bool });\n  };\n\n  showModal = url => {\n    this.setState({\n      showModal: true,\n      modalURL: url,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      showModal: false,\n    });\n  };\n\n  render() {\n    const { searchQuery, page, modalURL, showModal, showButton } = this.state;\n\n    return (\n      <div>\n        <ToastContainer autoClose={2500} />\n        {showModal && <Modal url={modalURL} onClose={this.closeModal} />}\n        <Searchbar onSubmit={this.onSearch} />\n        <ImageGallery\n          query={searchQuery}\n          page={page}\n          onImageClick={this.showModal}\n          showButton={this.showButton}\n        />\n        {showButton && <Button onClick={this.onLoadMore} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}